#############################################################################
# Makefile for building: liblib.a
# Generated by qmake (2.01a) (Qt 4.8.7) on: Sun Mar 27 11:24:04 2016
# Project:  lib.pro
# Template: lib
# Command: /usr/bin/qmake-qt4 -o Makefile lib.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -D_DEBUG -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -fPIC -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -fPIC -Wall -W -Wno-unused-parameter -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I../ui -I. -I../dialogs -I../tools -I/usr/include/xmms2 -I.
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = collectioninfomodel.cpp \
		fancyplaylistmodel.cpp \
		xclient.cpp \
		xmmsqt4.cpp \
		collectionmodel.cpp \
		playlistmodel.cpp \
		xclientcache.cpp \
		misc.cpp \
		preferencemanager.cpp moc_collectioninfomodel.cpp \
		moc_fancyplaylistmodel.cpp \
		moc_xclient.cpp \
		moc_xmmsqt4.cpp \
		moc_collectionmodel.cpp \
		moc_playlistmodel.cpp \
		moc_xclientcache.cpp \
		moc_preferencemanager.cpp
OBJECTS       = collectioninfomodel.o \
		fancyplaylistmodel.o \
		xclient.o \
		xmmsqt4.o \
		collectionmodel.o \
		playlistmodel.o \
		xclientcache.o \
		misc.o \
		preferencemanager.o \
		moc_collectioninfomodel.o \
		moc_fancyplaylistmodel.o \
		moc_xclient.o \
		moc_xmmsqt4.o \
		moc_collectionmodel.o \
		moc_playlistmodel.o \
		moc_xclientcache.o \
		moc_preferencemanager.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		../../conf.pri \
		../../config.pri \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/static.prf \
		/usr/share/qt4/mkspecs/features/staticlib.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		lib.pro
QMAKE_TARGET  = lib
DESTDIR       = 
TARGET        = liblib.a

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET) 

staticlib: $(TARGET)

$(TARGET):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS)


Makefile: lib.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		../../conf.pri \
		../../config.pri \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/static.prf \
		/usr/share/qt4/mkspecs/features/staticlib.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile lib.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
../../conf.pri:
../../config.pri:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/static.prf:
/usr/share/qt4/mkspecs/features/staticlib.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile lib.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/lib1.0.0 || $(MKDIR) .tmp/lib1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/lib1.0.0/ && $(COPY_FILE) --parents collectioninfomodel.h fancyplaylistmodel.h xclient.h xmmsqt4.h collectionmodel.h playlistmodel.h xclientcache.h misc.h preferencemanager.h debug.h .tmp/lib1.0.0/ && $(COPY_FILE) --parents collectioninfomodel.cpp fancyplaylistmodel.cpp xclient.cpp xmmsqt4.cpp collectionmodel.cpp playlistmodel.cpp xclientcache.cpp misc.cpp preferencemanager.cpp .tmp/lib1.0.0/ && (cd `dirname .tmp/lib1.0.0` && $(TAR) lib1.0.0.tar lib1.0.0 && $(COMPRESS) lib1.0.0.tar) && $(MOVE) `dirname .tmp/lib1.0.0`/lib1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/lib1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_collectioninfomodel.cpp moc_fancyplaylistmodel.cpp moc_xclient.cpp moc_xmmsqt4.cpp moc_collectionmodel.cpp moc_playlistmodel.cpp moc_xclientcache.cpp moc_preferencemanager.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_collectioninfomodel.cpp moc_fancyplaylistmodel.cpp moc_xclient.cpp moc_xmmsqt4.cpp moc_collectionmodel.cpp moc_playlistmodel.cpp moc_xclientcache.cpp moc_preferencemanager.cpp
moc_collectioninfomodel.cpp: xclient.h \
		xclientcache.h \
		collectioninfomodel.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) collectioninfomodel.h -o moc_collectioninfomodel.cpp

moc_fancyplaylistmodel.cpp: xclient.h \
		xclientcache.h \
		playlistmodel.h \
		fancyplaylistmodel.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) fancyplaylistmodel.h -o moc_fancyplaylistmodel.cpp

moc_xclient.cpp: xclientcache.h \
		xclient.h \
		xclient.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) xclient.h -o moc_xclient.cpp

moc_xmmsqt4.cpp: xmmsqt4.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) xmmsqt4.h -o moc_xmmsqt4.cpp

moc_collectionmodel.cpp: xclient.h \
		xclientcache.h \
		collectionmodel.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) collectionmodel.h -o moc_collectionmodel.cpp

moc_playlistmodel.cpp: xclient.h \
		xclientcache.h \
		playlistmodel.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) playlistmodel.h -o moc_playlistmodel.cpp

moc_xclientcache.cpp: xclient.h \
		xclientcache.h \
		xclientcache.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) xclientcache.h -o moc_xclientcache.cpp

moc_preferencemanager.cpp: preferencemanager.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) preferencemanager.h -o moc_preferencemanager.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

collectioninfomodel.o: collectioninfomodel.cpp collectioninfomodel.h \
		xclient.h \
		xclientcache.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o collectioninfomodel.o collectioninfomodel.cpp

fancyplaylistmodel.o: fancyplaylistmodel.cpp fancyplaylistmodel.h \
		xclient.h \
		xclientcache.h \
		playlistmodel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fancyplaylistmodel.o fancyplaylistmodel.cpp

xclient.o: xclient.cpp xclient.h \
		xclientcache.h \
		xmmsqt4.h \
		debug.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xclient.o xclient.cpp

xmmsqt4.o: xmmsqt4.cpp xmmsqt4.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xmmsqt4.o xmmsqt4.cpp

collectionmodel.o: collectionmodel.cpp collectionmodel.h \
		xclient.h \
		xclientcache.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o collectionmodel.o collectionmodel.cpp

playlistmodel.o: playlistmodel.cpp playlistmodel.h \
		xclient.h \
		xclientcache.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o playlistmodel.o playlistmodel.cpp

xclientcache.o: xclientcache.cpp xclientcache.h \
		xclient.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xclientcache.o xclientcache.cpp

misc.o: misc.cpp misc.h \
		xclient.h \
		xclientcache.h \
		debug.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o misc.o misc.cpp

preferencemanager.o: preferencemanager.cpp preferencemanager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o preferencemanager.o preferencemanager.cpp

moc_collectioninfomodel.o: moc_collectioninfomodel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_collectioninfomodel.o moc_collectioninfomodel.cpp

moc_fancyplaylistmodel.o: moc_fancyplaylistmodel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_fancyplaylistmodel.o moc_fancyplaylistmodel.cpp

moc_xclient.o: moc_xclient.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_xclient.o moc_xclient.cpp

moc_xmmsqt4.o: moc_xmmsqt4.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_xmmsqt4.o moc_xmmsqt4.cpp

moc_collectionmodel.o: moc_collectionmodel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_collectionmodel.o moc_collectionmodel.cpp

moc_playlistmodel.o: moc_playlistmodel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_playlistmodel.o moc_playlistmodel.cpp

moc_xclientcache.o: moc_xclientcache.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_xclientcache.o moc_xclientcache.cpp

moc_preferencemanager.o: moc_preferencemanager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_preferencemanager.o moc_preferencemanager.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

